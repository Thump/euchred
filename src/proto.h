
/*
 * (C) Copyright 1999 Denis McLaughlin
 */


Card *NewDeck();
Card HiCard(Card card1, Card card2, int leadsuit, int trumpsuit);
boolean BooleanReady(int sock);
boolean BytesReady(int sock, int n);
boolean HasCard(int pnum, Card card);
boolean HasSuit(int pnum, int suit);
boolean IntReady(int sock);
boolean MsgReady(int pnum);
boolean NextCall();
boolean NextDefend();
boolean NextOrder();
boolean NextPlay();
boolean ReadBoolean(int pnum, boolean *data);
boolean ReadInt(int pnum, int *data);
boolean ReadShort(int pnum, short *data);
boolean ShortReady(int sock);
boolean TailCheck(int pnum);
boolean UnpackBoolean(boolean data);
boolean ValidPlay(int pnum, Card card);
char *AcceptSocket(int *client);
char *CardName(Card card);
char *CardText(Card card);
char *PrintSuit(int suit);
char *ReadString(int pnum);
char *SuitText(int suit);
char *UnpackString(char *data);
char *ValueText(int value);
fd_set DoSelect(void);
int CardCompare(Card *card1, Card *card2);
int PackBoolean(char *buffer, boolean data);
int PackCard(char *buffer, Card card);
int PackCards(char *buffer, int pnum);
int PackInt(char *buffer, int data);
int PackPlayer(char *buffer, int pnum);
int PackShort(char *buffer, short data);
int PackString(char *buffer, char *data);
int ReadMsg(int sock, char *buffer, int size);
int Socket2Client(int sock);
int SuitOf(Card card);
int UnpackInt(int data);
int main(int argc, char **argv);
short UnpackShort(short data);
void AddCard(int pnum, Card card);
void AddClient();
void ClearGame();
void ClearHand();
void ClearPlayer(int pnum);
void ClientCall(int pnum);
void ClientCallAlone(int pnum);
void ClientCallPass(int pnum);
void ClientChat(int pnum);
void ClientDefend(int pnum);
void ClientDefendPass(int pnum);
void ClientDisconnect(int pnum);
void ClientDrop(int pnum);
void ClientEnd(int pnum);
void ClientGarbage(int pnum);
void ClientID(int pnum);
void ClientKick(int pnum);
void ClientOptions(int pnum);
void ClientOrder(int pnum);
void ClientOrderAlone(int pnum);
void ClientOrderPass(int pnum);
void ClientPlay(int pnum);
void ClientQuit(int pnum);
void ClientStart(int pnum);
void DeclineClient();
void EvaluateCards();
void Exit(void);
void GameOver(int winningteam);
void InitData(void);
void Initialize(int argc, char **argv);
void JoinClient(int pnum);
void KickClient(int pnum, char *reason);
void NewClient();
void NewHand();
void NextAction();
void OpenLog(void);
void OpenSocket(void);
void PickCreator();
void PickDealer();
void PickLeader();
void PlayGame(void);
void PrintBuffer(char *buffer, int len);
void PrintCard(Card card);
void PrintCards(Card *cards, int numcards);
void PrintConfig(void);
void PrintGame(void);
void PrintHand(Hand hand);
void PrintHeader(void);
void PrintPlayer(Player player);
void PrintPstate(pstate state);
void ReadConfig(void);
void ReadSwitch(int argc, char **argv);
void RemoveCard(int pnum, Card card);
void RemoveClient(int pnum);
void ResetGame();
void SendCallDeny(int pnum, char *reason);
void SendCallOffer(int pnum);
void SendChat(char *chat);
void SendDeal();
void SendDecline(int sock, char *reason);
void SendDefendDeny(int pnum, char *reason);
void SendDefendOffer(int pnum);
void SendDropDeny(int pnum, char *reason);
void SendDropOffer(int pnum);
void SendEndDeny(int pnum, char *reason);
void SendGameOver();
void SendHandOver();
void SendJoinAccept(int pnum);
void SendJoinDeny(int pnum, char *reason);
void SendKick(int p, char *reason);
void SendKickDeny(int pnum, char *reason);
void SendMsg(int sock, char *buffer, int size);
void SendOptionsDeny(int pnum, char *reason);
void SendOrderDeny(int pnum, char *reason);
void SendOrderOffer(int pnum);
void SendPlayDeny(int pnum, char *reason);
void SendPlayOffer(int pnum);
void SendQuit(int pnum, char *reason);
void SendStartDeny(int pnum, char *reason);
void SendState();
void SendTrickOver();
void ServiceClient(int pnum);
void SetSignal(void);
void TrapHUP(void);
void TrapINT(void);
void Usage(void);
void myLog(char *msgtext);
